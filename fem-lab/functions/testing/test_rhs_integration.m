function correct = test_rhs_integration()    % 1. Define Shape Functions    % 1. Element    shape_function_1 = zeros(4,4);    data_set = [0,0,1;0,0.5,0;0.5,0,0;0.5,0.5,0];    shape_function_1(1,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,1;0.5,0,0;0.5,0.5,0];    shape_function_1(2,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,1;0.5,0.5,0];    shape_function_1(3,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,0;0.5,0.5,1];    shape_function_1(4,:) = hf_interpolation(data_set);    % 2. Element    shape_function_2 = zeros(4,4);    data_set = [0.5,0,1;1,0,0;0.5,0.5,0;1,0.5,0];    shape_function_2(1,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,1;0.5,0.5,0;1,0.5,0];    shape_function_2(2,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,1;1,0.5,0];    shape_function_2(3,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,0;1,0.5,1];    shape_function_2(4,:) = hf_interpolation(data_set);    % 3. Element    shape_function_3 = zeros(4,4);    data_set = [0,0.5,1;0.5,0.5,0;0,1,0;0.5,1,0];    shape_function_3(1,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,1;0,1,0;0.5,1,0];    shape_function_3(2,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,1;0.5,1,0];    shape_function_3(3,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,0;0.5,1,1];    shape_function_3(4,:) = hf_interpolation(data_set);    % 4. Element    shape_function_4 = zeros(4,4);    data_set = [0.5,0.5,1;1,0.5,0;0.5,1,0;1,1,0];    shape_function_4(1,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,1;0.5,1,0;1,1,0];    shape_function_4(2,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,1;1,1,0];    shape_function_4(3,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,0;1,1,1];    shape_function_4(4,:) = hf_interpolation(data_set);        % create right hand side    cell_matrix = mesh_cell(0.5,1);    rhs = zeros(9,1);    for i=1:9        value = 0;        % 1 Element        if ( mesh_renumber(cell_matrix,1,i) != 0  )            shape_function = shape_function_1(mesh_renumber(cell_matrix,1,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0,0.5,0,0.5);        endif        % 2 Element        if ( mesh_renumber(cell_matrix,2,i) != 0  )            shape_function = shape_function_2(mesh_renumber(cell_matrix,2,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0.5,1,0,0.5);        endif        % 3 Element        if ( mesh_renumber(cell_matrix,3,i) != 0  )            shape_function = shape_function_3(mesh_renumber(cell_matrix,3,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0,0.5,0.5,1);        endif        % 4 Element        if ( mesh_renumber(cell_matrix,4,i) != 0  )            shape_function = shape_function_4(mesh_renumber(cell_matrix,4,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0.5,1,0.5,1);        endif        rhs(i) = value;    endfor    % Generate value by rhs_integration    [vertex,cell] = mesh_generate(0.5);    SF = sf_generate(1);    rhs_generated = rhs_integration(0.5,1,cell,vertex,SF);          % test for correctness    correct = zeros(9,1);    for i=1:9        if( abs(rhs(i) - rhs_generated(i) ) < 0.1 )            correct(i) = 1;        endif    endfor        endfunction