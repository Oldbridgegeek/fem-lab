function correct = test_rhs_integration()    % Shape functions    % 1. Element    shape_function_1 = [1,-2,-2,4;0,2,0,-4;0,0,2,-4;0,0,0,4];        % 2. Element    shape_function_2 = [2,-2,-4,4;-1,2,2,-4;0,0,4,-4;0,0,-2,4];     % 3. Element    shape_function_3 = [2,-4,-2,4;0,4,0,-4;-1,2,2,-4;0,-2,0,4];    % 4. Element    shape_function_4 = [4,-4,-4,4;-2,4,2,-4;-2,2,4,-4;1,-2,-2,4];        % create right hand side    cell_matrix = mesh_cell(0.5,1);    rhs = zeros(9,1);         % First node     shape_function_T1 = shape_function_1(1,:);    f_1 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T1);    rhs(1) = dblquad(f_1,0,0.5,0,0.5);        % Second node    shape_function_T1 = shape_function_1(2,:);    shape_function_T2 = shape_function_2(1,:);    f_1 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T1);    f_2 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T2);    rhs(2) = dblquad(f_1,0,0.5,0,0.5) + dblquad(f_2,0.5,1,0,0.5);        % Third node    shape_function_T2 = shape_function_2(2,:);    f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T2);    rhs(3) = dblquad(f,0.5,1,0,0.5);        % Fourth node    shape_function_T1 = shape_function_1(3,:);    shape_function_T3 = shape_function_3(1,:);    f_1 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T1);    f_3 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T3);    rhs(4) = dblquad(f_1,0,0.5,0,0.5) + dblquad(f_3,0,0.5,0.5,1);        % Fifth node    shape_function_T1 = shape_function_1(4,:);    shape_function_T2 = shape_function_2(3,:);    shape_function_T3 = shape_function_3(2,:);    shape_function_T4 = shape_function_4(1,:);    f_1 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T1);    f_2 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T2);    f_3 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T3);    f_4 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T4);    rhs(5) = dblquad(f_1,0,0.5,0,0.5) + dblquad(f_3,0,0.5,0.5,1) + dblquad(f_2,0.5,1,0,0.5) + dblquad(f_4,0.5,1,0.5,1);        % Sixth node    shape_function_T2 = shape_function_2(4,:);    shape_function_T4 = shape_function_4(2,:);    f_2 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T2);    f_4 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T4);    rhs(6) = dblquad(f_2,0.5,1,0,0.5) + dblquad(f_4,0.5,1,0.5,1);        % Seventh node    shape_function_T3 = shape_function_3(3,:);    f_3 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T3);    rhs(7) = dblquad(f_3,0,0.5,0.5,1);        % Eigth node    shape_function_T3 = shape_function_3(4,:);    shape_function_T4 = shape_function_4(3,:);    f_3 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T3);    f_4 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T4);    rhs(8) = dblquad(f_3,0,0.5,0.5,1) + dblquad(f_4,0.5,1,0.5,1);        % Ninth node    shape_function_T4 = shape_function_4(4,:);    f_4 = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function_T4);    rhs(9) = dblquad(f_4,0.5,1,0.5,1);                % Generate value by rhs_integration    [vertex,cell] = mesh_generate(0.5);    SF = sf_generate(1);    rhs_generated = rhs_integration(0.5,1,cell,vertex,SF);          % test for correctness    rhs_generated    rhs    correct = zeros(9,1);    for i=1:9        if( abs(rhs(i) - rhs_generated(i) ) < 0.001 )            correct(i) = 1;        endif    endfor        endfunction