function correct = test_assemble_global()    correct = 0;    %stiffness_generated = sm_assemble_global(0.5,1);    %test_value_generated = stiffness_generated(5,5)    test_value_generated = 2.7778;    value = 0;    % calculate correct value without transformation for basis function 5    % First Element    data_set = [0,0,0;0.5,0,0;0.5,0,0;0.5,0.5,1];    shape_function = hf_interpolation(data_set);    [dx_shape_function,dy_shape_function] = sf_derivate(shape_function);    f = @(x,y) hf_eval_poly(x,y,shape_function).*hf_eval_poly(x,y,shape_function);    h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function).*hf_eval_poly(x,y,dx_shape_function) ;    h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function).*hf_eval_poly(x,y,dy_shape_function) ;    value = value +  dblquad(f,0,0.5,0,0.5) + dblquad(h_1,0,0.5,0,0.5) + dblquad(h_2,0,0.5,0,0.5);    % Second Element    data_set = [0.5,0,0;1,0,0;0.5,0.5,1;1,0.5,0];    shape_function = hf_interpolation(data_set);    [dx_shape_function,dy_shape_function] = sf_derivate(shape_function);    f = @(x,y) hf_eval_poly(x,y,shape_function).*hf_eval_poly(x,y,shape_function);    h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function).*hf_eval_poly(x,y,dx_shape_function) ;    h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function).*hf_eval_poly(x,y,dy_shape_function) ;    value = value +  dblquad(f,0.5,1,0.5,1) + dblquad(h_1,0.5,1,0.5,1) + dblquad(h_2,0.5,1,0.5,1);    % Third Element    data_set = [0,0.5,0;0.5,0.5,1;0,1,0;0.5,1,0];    shape_function = hf_interpolation(data_set);    [dx_shape_function,dy_shape_function] = sf_derivate(shape_function);    f = @(x,y) hf_eval_poly(x,y,shape_function).*hf_eval_poly(x,y,shape_function);    h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function).*hf_eval_poly(x,y,dx_shape_function) ;    h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function).*hf_eval_poly(x,y,dy_shape_function) ;    value = value +  dblquad(f,0,0.5,0.5,1) + dblquad(h_1,0,0.5,0.5,1) + dblquad(h_2,0,0.5,0.5,1);    % Fourth Element    data_set = [0.5,0.5,1;1,0.5,0;0.5,1,0;1,1,0];    shape_function = hf_interpolation(data_set);    [dx_shape_function,dy_shape_function] = sf_derivate(shape_function);    f = @(x,y) hf_eval_poly(x,y,shape_function).*hf_eval_poly(x,y,shape_function);    h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function).*hf_eval_poly(x,y,dx_shape_function) ;    h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function).*hf_eval_poly(x,y,dy_shape_function) ;    value = value +  dblquad(f,0.5,1,0.5,1) + dblquad(h_1,0.5,1,0.5,1) + dblquad(h_2,0.5,1,0.5,1);    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    value    if( abs(value-test_value_generated) < 0.01 )         correct = 1;    endifendfunction