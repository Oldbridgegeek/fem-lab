function solution = test_solution()    % Solve the problem for mesh size 0.5 and polynomial degree 1    % 1. Define Shape Functions    % 1. Element    shape_function_1 = zeros(4,4);    data_set = [0,0,1;0,0.5,0;0.5,0,0;0.5,0.5,0];    shape_function_1(1,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,1;0.5,0,0;0.5,0.5,0];    shape_function_1(2,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,1;0.5,0.5,0];    shape_function_1(3,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,0;0.5,0.5,1];    shape_function_1(4,:) = hf_interpolation(data_set);    % 2. Element    shape_function_2 = zeros(4,4);    data_set = [0.5,0,1;1,0,0;0.5,0.5,0;1,0.5,0];    shape_function_2(1,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,1;0.5,0.5,0;1,0.5,0];    shape_function_2(2,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,1;1,0.5,0];    shape_function_2(3,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,0;1,0.5,1];    shape_function_2(4,:) = hf_interpolation(data_set);    % 3. Element    shape_function_3 = zeros(4,4);    data_set = [0,0.5,1;0.5,0.5,0;0,1,0;0.5,1,0];    shape_function_3(1,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,1;0,1,0;0.5,1,0];    shape_function_3(2,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,1;0.5,1,0];    shape_function_3(3,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,0;0.5,1,1];    shape_function_3(4,:) = hf_interpolation(data_set);    % 4. Element    shape_function_4 = zeros(4,4);    data_set = [0.5,0.5,1;1,0.5,0;0.5,1,0;1,1,0];    shape_function_4(1,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,1;0.5,1,0;1,1,0];    shape_function_4(2,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,1;1,1,0];    shape_function_4(3,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,0;1,1,1];    shape_function_4(4,:) = hf_interpolation(data_set);        % create stiffness matrix    stiffness_matrix = zeros(9,9);        % stiffness_matrix    cell_matrix = mesh_cell(0.5,1);        for i=1:9        for j=1:9            value = 0;            % 1. Element            if ( mesh_renumber(cell_matrix,1,i) != 0 && mesh_renumber(cell_matrix,1,j) != 0 )                shape_function_i = shape_function_1(mesh_renumber(cell_matrix,1,i),:);                shape_function_j = shape_function_1(mesh_renumber(cell_matrix,1,j),:);                [dx_shape_function_i,dy_shape_function_i] = sf_derivate(shape_function_i);                [dx_shape_function_j,dy_shape_function_j] = sf_derivate(shape_function_j);                f = @(x,y) hf_eval_poly(x,y,shape_function_i).*hf_eval_poly(x,y,shape_function_j);                h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function_i).*hf_eval_poly(x,y,dx_shape_function_j) ;                h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function_i).*hf_eval_poly(x,y,dy_shape_function_j) ;                value = value +  dblquad(f,0,0.5,0,0.5) + dblquad(h_1,0,0.5,0,0.5) + dblquad(h_2,0,0.5,0,0.5);            endif            % 2. Element            if ( mesh_renumber(cell_matrix,2,i) != 0 && mesh_renumber(cell_matrix,2,j) != 0 )                shape_function_i = shape_function_2(mesh_renumber(cell_matrix,2,i),:);                shape_function_j = shape_function_2(mesh_renumber(cell_matrix,2,j),:);                [dx_shape_function_i,dy_shape_function_i] = sf_derivate(shape_function_i);                [dx_shape_function_j,dy_shape_function_j] = sf_derivate(shape_function_j);                f = @(x,y) hf_eval_poly(x,y,shape_function_i).*hf_eval_poly(x,y,shape_function_j);                h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function_i).*hf_eval_poly(x,y,dx_shape_function_j) ;                h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function_i).*hf_eval_poly(x,y,dy_shape_function_j) ;                value = value +  dblquad(f,0.5,1,0,0.5) + dblquad(h_1,0.5,1,0,0.5) + dblquad(h_2,0.5,1,0,0.5);            endif            % 3. Element            if ( mesh_renumber(cell_matrix,3,i) != 0 && mesh_renumber(cell_matrix,3,j) != 0 )                shape_function_i = shape_function_3(mesh_renumber(cell_matrix,3,i),:);                shape_function_j = shape_function_3(mesh_renumber(cell_matrix,3,j),:);                [dx_shape_function_i,dy_shape_function_i] = sf_derivate(shape_function_i);                [dx_shape_function_j,dy_shape_function_j] = sf_derivate(shape_function_j);                f = @(x,y) hf_eval_poly(x,y,shape_function_i).*hf_eval_poly(x,y,shape_function_j);                h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function_i).*hf_eval_poly(x,y,dx_shape_function_j) ;                h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function_i).*hf_eval_poly(x,y,dy_shape_function_j) ;                value = value +  dblquad(f,0,0.5,0.5,1) + dblquad(h_1,0,0.5,0.5,1) + dblquad(h_2,0,0.5,0.5,1);            endif            % 4. Element            if ( mesh_renumber(cell_matrix,4,i) != 0 && mesh_renumber(cell_matrix,4,j) != 0 )                shape_function_i = shape_function_4(mesh_renumber(cell_matrix,4,i),:);                shape_function_j = shape_function_4(mesh_renumber(cell_matrix,4,j),:);                [dx_shape_function_i,dy_shape_function_i] = sf_derivate(shape_function_i);                [dx_shape_function_j,dy_shape_function_j] = sf_derivate(shape_function_j);                f = @(x,y) hf_eval_poly(x,y,shape_function_i).*hf_eval_poly(x,y,shape_function_j);                h_1 = @(x,y) hf_eval_poly(x,y,dx_shape_function_i).*hf_eval_poly(x,y,dx_shape_function_j) ;                h_2 = @(x,y) hf_eval_poly(x,y,dy_shape_function_i).*hf_eval_poly(x,y,dy_shape_function_j) ;                value = value +  dblquad(f,0.5,1,0.5,1) + dblquad(h_1,0.5,1,0.5,1) + dblquad(h_2,0.5,1,0.5,1);            endif            stiffness_matrix(i,j) = value;          endfor    endfor                  % create right hand side    rhs = zeros(9,1);    for i=1:9        % 1 Element        if ( mesh_renumber(cell_matrix,1,i) != 0  )            shape_function = shape_function_1(mesh_renumber(cell_matrix,1,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0,0.5,0,0.5);        endif        % 2 Element        if ( mesh_renumber(cell_matrix,2,i) != 0  )            shape_function = shape_function_2(mesh_renumber(cell_matrix,2,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0.5,1,0,0.5);        endif        % 3 Element        if ( mesh_renumber(cell_matrix,3,i) != 0  )            shape_function = shape_function_3(mesh_renumber(cell_matrix,3,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0,0.5,0.5,1);        endif        % 4 Element        if ( mesh_renumber(cell_matrix,4,i) != 0  )            shape_function = shape_function_4(mesh_renumber(cell_matrix,4,i),:);            f = @(x,y) cos(pi.*x).*cos(pi.*y).*hf_eval_poly(x,y,shape_function);            value = value + dblquad(f,0.5,1,0.5,1);        endif        rhs(i) = value;    endfor        solution = stiffness_matrix \ rhs ;endfunction