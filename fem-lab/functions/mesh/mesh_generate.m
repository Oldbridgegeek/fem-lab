% mesh_generate divides the unit square into equivilant squares with side length mesh_sizefunction [vertex,cell] = mesh_generate(mesh_size)    side_length = mesh_size;                vertex_nr = 1;             % initialise matrix saving all vertices. 1st column represents x value and 2nd column y value.    % fill vertex matrix with its values orderd in lexicographical order.    for y_val=0:side_length:1        for x_val=0:side_length:1            vertex(vertex_nr,1:2) = [x_val,y_val];            vertex_nr++;        endfor    endfor    % fill cell matrix with its values in lexicographical order.    % cell matrix is defined by the vertices. 1st column represents the first vertex of the cell. 2nd column the 2nd vertex of the cell    % and so on.    % vertex_i defines the number of the vertex in the vertex matrix    vertices_per_row = (1/side_length)+1;    vertex_1 = 1;    counter = 1;    vertex_nr = length(vertex);    while vertex_1+3 <= vertex_nr         vertex_2 = vertex_1+1;        vertex_3 = vertex_1+vertices_per_row;        vertex_4 = vertex_3+1;        cell(counter,1:4) = [vertex_1,vertex_2,vertex_3,vertex_4];        counter++;        if(vertex(vertex_2,1)<1)            vertex_1=vertex_2;        else            vertex_1 = vertex_2+1;        endif    endwhileendfunction