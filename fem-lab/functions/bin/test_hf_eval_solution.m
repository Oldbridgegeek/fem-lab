function val = test_hf_eval_solution(x,y,solution)    % mesh size 0.5    % polynomial degree 1    val = 0;        % Define Shape Functions    % 1. Element    shape_function_1 = zeros(4,4);    data_set = [0,0,1;0,0.5,0;0.5,0,0;0.5,0.5,0];    shape_function_1(1,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,1;0.5,0,0;0.5,0.5,0];    shape_function_1(2,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,1;0.5,0.5,0];    shape_function_1(3,:) = hf_interpolation(data_set);    data_set = [0,0,0;0,0.5,0;0.5,0,0;0.5,0.5,1];    shape_function_1(4,:) = hf_interpolation(data_set);    % 2. Element    shape_function_2 = zeros(4,4);    data_set = [0.5,0,1;1,0,0;0.5,0.5,0;1,0.5,0];    shape_function_2(1,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,1;0.5,0.5,0;1,0.5,0];    shape_function_2(2,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,1;1,0.5,0];    shape_function_2(3,:) = hf_interpolation(data_set);    data_set = [0.5,0,0;1,0,0;0.5,0.5,0;1,0.5,1];    shape_function_2(4,:) = hf_interpolation(data_set);    % 3. Element    shape_function_3 = zeros(4,4);    data_set = [0,0.5,1;0.5,0.5,0;0,1,0;0.5,1,0];    shape_function_3(1,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,1;0,1,0;0.5,1,0];    shape_function_3(2,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,1;0.5,1,0];    shape_function_3(3,:) = hf_interpolation(data_set);    data_set = [0,0.5,0;0.5,0.5,0;0,1,0;0.5,1,1];    shape_function_3(4,:) = hf_interpolation(data_set);    % 4. Element    shape_function_4 = zeros(4,4);    data_set = [0.5,0.5,1;1,0.5,0;0.5,1,0;1,1,0];    shape_function_4(1,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,1;0.5,1,0;1,1,0];    shape_function_4(2,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,1;1,1,0];    shape_function_4(3,:) = hf_interpolation(data_set);    data_set = [0.5,0.5,0;1,0.5,0;0.5,1,0;1,1,1];    shape_function_4(4,:) = hf_interpolation(data_set);        % Check which Element contains (x,y)     element_nr = 0;    if(x<0.5)        if(y<0.5)            element_nr = 1;        else            element_nr = 3;        endif    else        if(y<0.5)            element_nr = 2;        else            element_nr = 4;        endif    endif    if(element_nr == 1)        val = hf_eval_poly(x,y,shape_function_1(1,:))+hf_eval_poly(x,y,shape_function_1(2,:))+hf_eval_poly(x,y,shape_function_1(3,:))+hf_eval_poly(x,y,shape_function_1(4,:));    elseif(element_nr == 2)        val = hf_eval_poly(x,y,shape_function_2(1,:))+hf_eval_poly(x,y,shape_function_2(2,:))+hf_eval_poly(x,y,shape_function_3(3,:))+hf_eval_poly(x,y,shape_function_4(4,:));    elseif(element_nr == 3)        val = hf_eval_poly(x,y,shape_function_3(1,:))+hf_eval_poly(x,y,shape_function_3(2,:))+hf_eval_poly(x,y,shape_function_3(3,:))+hf_eval_poly(x,y,shape_function_3(4,:));    elseif(element_nr == 4)        val = hf_eval_poly(x,y,shape_function_4(1,:))+hf_eval_poly(x,y,shape_function_4(2,:))+hf_eval_poly(x,y,shape_function_4(3,:))+hf_eval_poly(x,y,shape_function_4(4,:));    endif    endfunction