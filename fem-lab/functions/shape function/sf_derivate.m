function [dx_SF,dy_SF] = sf_derivate(SF)    %dx_SF    %read first row    func = SF(1,:);    dx_func = zeros(1,length(SF));        %create a dataset to make a interpolation to get a function getting exponent of x and y and get as result the column index    data_set = zeros(length(SF),3);    j=1;     % order of basis    level=0; % For the level look at the ordering of the basisfunctions    while j<length(SF)        base_x=level;        base_y=0;        while(base_y < level)            data_set(j,:) = [base_x , base_y, j];            base_y++;            j++;        endwhile                base_x = 0;        base_y = level;        while(base_x < level)            data_set(j,:) = [base_x , base_y, j];            base_x++;            j++;        endwhile           data_set(j,:)=[level,level,j];        level++;        j++;    endwhile        %Interpolation    exponent_to_column = hf_interpolation(data_set);        %Test    hf_eval_poly(0,0,exponent_to_column)    hf_eval_poly(1,0,exponent_to_column)    hf_eval_poly(0,1,exponent_to_column)    hf_eval_poly(1,1,exponent_to_column)        %dx_SF    for i=2:length(SF)        dx_func(hf_eval_poly(i-1,j) )= i*func(hf_eval_poly(i,j)    endfunction